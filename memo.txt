ORM(객체 관계 매핑)
- 객체 지향 프로그래밍 언어에서 사용되는 객체와 관계형 데이터베이스 간의 불일치를 해결하기 위한 기술
- 객체 모델과 관계형 데이터베이스의 테이블 간의 매핑을 수행하여 개발자가 SQL 쿼리 대신 객체 지향 코드를 사용할 수 있도록 함

ODM(객체 문서 매핑)
- NoSQL 데이터베이스와 객체 지향 프로그래밍 언어 간의 매핑을 제공하는 기술
- 주로 문서 지향 데이터베이스(MongoDB)와 함께 사용




// 브랜치를 통해 개발자는 원래 코드 기반에서 브랜치하고 작업을 다른 사람과 분리할 수 있습니다. 또한 Git이 나중에 버전을 쉽게 병합하는 데 도움이 됩니다.

현재 작업중인 브랜치 확인(목록 확인)
- * 표시가 되어 있는 것이 현재 작업중인 브랜치
git branch

branch 생성하기
git branch[브랜치 이름]

branch만 전환하기
git switch [브랜치 이름]
git checkout [브랜치 이름]

branch 생성과 동시에 전환 
git checkout -b [브랜치 이름]

MongoDB
- https://www.mongodb.com/ko-kr
- 몽고디비는 NoSQL 데이터베이스 시스템 중 하나로, 문서 지향 데이터베이스
- JSON 형식의 BSON(Binary JSON) 문서를 사용하여 데이터를 저장하기 때문에 유연하고 확장 가능한 데이터 모델을 제공함
- NoSQL 데이터베이스는 관계형 데이터베이스와 다르게 스키마가 고정되어 있지 않아 유동적인 데이터구조를 다룰 수 있음
- 대량의 데이터를 다루는 대규모 어플리케이션과 웹 서비스에서 주로 사용됨
- 분산 데이터베이스 환경에서 잘 작동(수평적 확장이 가능)

✔ 스키마 
- 데이터를 저장하기 위해서 규격을 만들어주는 것


kdt.users.insertOne({
    "name": "apple",
    "age": 20,
    "gender": "female"
})

kdt.users.insertOne([
    {"name": "apple", "age": 20, "gender": "female"},
    {"name": "orange", "age": 30, "gender": "mele"},
    {"name": "melon", "age": 27, "gender": "mele"}
])

{"userid": "avocado", "name": "안가도", "email": "avocado@avocado.com", "gender": "mele"}